
table_log () -- log changes to another table

some code taken from noup.c

written by Andreas ' ads' Scherbaum (ads@ufp.de)


license:

Copyright (c) 2002  Andreas Scherbaum

Basically it is same as the PostgreSQL license (BSD license).

Permission to use, copy, modify, and distribute this software and
its documentation for any purpose and without fee is hereby
granted, provided that the above copyright notice appear in all
copies and that both that copyright notice and this permission
notice appear in supporting documentation, and that the name of the
author not be used in advertising or publicity pertaining to
distribution of the software without specific, written prior
permission. The author makes no representations about the
suitability of this software for any purpose.  It is provided "as
is" without express or implied warranty.


description:

create trigger with log table name as argument
if no table name is given, the actual table name
plus '_log' will be used


example:

CREATE TRIGGER test_log_chg AFTER UPDATE OR INSERT OR DELETE ON test_table FOR EACH ROW
               EXECUTE PROCEDURE table_log();
^^^^^ 'test_table_log' will be used to log changes

CREATE TRIGGER test_log_chg AFTER UPDATE OR INSERT OR DELETE ON test_table FOR EACH ROW
               EXECUTE PROCEDURE table_log('log_table');
^^^^^ 'log_table' will be used to log changes


the log table needs exact the same columns as the
table where the trigger will be used
(but without any constraints)
plus three extra columns:

trigger_mode VARCHAR(10)
trigger_tuple VARCHAR(5)
trigger_changed TIMESTAMP

trigger_mode contains 'INSERT', 'UPDATE' or 'DELETE'
trigger_tuple contains 'old' or 'new'

on INSERT, a log with the 'new' tuple will be written,
on UPDATE a log with the old tuple and  a log with
the new tuple will be written and on DELETE a log
with the old tuple will be written


a good method to create the log table from the existing table:

-- create the table without data
SELECT * INTO test_log FROM test LIMIT 0;
ALTER TABLE test_log ADD COLUMN trigger_mode VARCHAR(10);
ALTER TABLE test_log ADD COLUMN trigger_tuple VARCHAR(5);
ALTER TABLE test_log ADD COLUMN trigger_changed TIMESTAMP;
- now activate the history function
CREATE TRIGGER test_log_chg AFTER UPDATE OR INSERT OR DELETE ON test FOR EACH ROW
               EXECUTE PROCEDURE table_log();


see table_log.sql for a demo


installation:

there are 2 Makefile's in this directory, one (Makefile) for the
installation from PostgreSQL's contrib directory and one
(Makefile.nocontrib) for installation from source.
For installation from contrib directory see Pg docu.
For installation from source:

make -f Makefile.nocontrib all
(as root)
make -f Makefile.nocontrib install

the pg_config tool must be in $PATH for installation.

then you have to create a new function:
CREATE FUNCTION "table_log" () RETURNS opaque
    AS '$libdir/table_log', 'table_log' LANGUAGE 'C';


bugs:


todo:
- reverse function(s): give a table name, a previous date
  (and maybe some additional arguments) and return the state of the
  table at this date


changes:

- 2002/04/06: Andreas 'ads' Scherbaum (ads@ufp.de)
  first release

- 2002/04/25: Steve Head (smhf@onthe.net.au)
  there was a bug with NULL values, thanks to
  Steve Head for reporting this.

- 2002/04/25: Andreas 'ads' Scherbaum (ads@ufp.de)
  now using version numbers (0.0.5 for this release)

- 2002/09/09: Andreas 'ads' Scherbaum (ads@ufp.de)
  fix bug in calculating log table name
  release 0.0.6

- 2003/03/22: Andreas 'ads' Scherbaum (ads@ufp.de)
  fix some error messages (old name from 'noup' renamed to 'table_log')
  one additional check that the trigger is fired after
  release 0.0.7

- 2003/03/23: Andreas 'ads' Scherbaum (ads@ufp.de)
  create a second Makefile for installing from source
  release 0.1.0

- 2003/04/20: Andreas 'ads' Scherbaum (ads@ufp.de)
  change Makefile.nocontrib to Linux only and make a comment about
  installation informations for other platforms
  (its too difficult to have all install options here,
   i dont have the ability to test all platforms)

- 2003/06/12: Andreas 'ads' Scherbaum (ads@ufp.de)
  update documentation (thanks to Erik Thiele <erik@thiele-hydraulik.de>
  for pointing this out)

If you have any changes or improvements, please contact me.

my gpg key:
pub  1024D/4813B5FE 2000-09-29 Andreas Scherbaum <ads@ufp.de>
     Key fingerprint = 9F67 73D3 43AA B30E CA8F  56E5 3002 8D24 4813 B5FE
